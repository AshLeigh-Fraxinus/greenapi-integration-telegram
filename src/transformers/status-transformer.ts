import { OutgoingMessageStatusWebhook } from "@green-api/greenapi-integration";
import { TelegramPlatformMessage } from "../types/telegram";
import { BaseTransformer } from "./base-transformer";
import { SQLiteStorage } from "../storage/storage";

export class StatusTransformer extends BaseTransformer {
  constructor(storage: SQLiteStorage) {
    super(storage);
  }

  handleOutgoingMessageStatus(webhook: OutgoingMessageStatusWebhook, language: string = 'en'): TelegramPlatformMessage {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ noAccount
    if (webhook.status === 'noAccount') {
      const messageText = language === 'ru' || language === 'kz' ? 
        `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è\n\n` +
        `–°—Ç–∞—Ç—É—Å: <b>noAccount</b>\n` +
        `ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${webhook.idMessage}\n` +
        `–ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${webhook.chatId}\n\n` +
        `<b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</b>\n` +
        `‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ\n(–Ω–∞–ø—Ä–∏–º–µ—Ä, 79876543210 –≤–º–µ—Å—Ç–æ +79876543210 –∏–ª–∏ 89876543210)\n` +
        `‚Ä¢ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n` +
        `‚Ä¢ –ù–æ–º–µ—Ä –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ WhatsApp\n\n` +
        `üìö <a href="https://green-api.com/docs/faq/features-of-sending-and-receiving-messages-from-different-countries/">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö</a>` :
        `‚ùå Message sending error\n\n` +
        `Status: <b>noAccount</b>\n` +
        `Message ID: ${webhook.idMessage}\n` +
        `Recipient: ${webhook.chatId}\n\n` +
        `<b>Possible reasons:</b>\n` +
        `‚Ä¢ Phone number must be in international format\n(e.g., 79876543210 instead of +79876543210 or 89876543210)\n` +
        `‚Ä¢ Invalid phone number\n` +
        `‚Ä¢ Number is not registered in WhatsApp\n\n` +
        `üìö <a href="https://green-api.com/docs/faq/features-of-sending-and-receiving-messages-from-different-countries/">Features of sending and receiving messages from different countries</a>`;
      
      return {
        chat_id: "",
        text: messageText,
        parse_mode: 'HTML',
        disable_web_page_preview: true
      };
    }

    const statusMapRu: { [key: string]: string } = {
      sent: "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ",
      delivered: "–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ", 
      read: "–ø—Ä–æ—á–∏—Ç–∞–Ω–æ",
      failed: "–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏"
    };

    const statusMapEn: { [key: string]: string } = {
      sent: "sent",
      delivered: "delivered", 
      read: "read",
      failed: "failed"
    };

    const statusMap = language === 'ru' || language === 'kz' ? statusMapRu : statusMapEn;
    const status = statusMap[webhook.status] || webhook.status;

    const messageText = language === 'ru' || language === 'kz' ? 
      `–°—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏—è: ${status}\nID —Å–æ–æ–±—â–µ–Ω–∏—è: ${webhook.idMessage}` :
      `Message status: ${status}\nMessage ID: ${webhook.idMessage}`;
    
    return {
      chat_id: "",
      text: messageText
    };
  }
}